package main

import "fmt"

/**
	对于引用变量，不光要声明它，还要分配内存空间，否则值不知道存哪儿
	对于值类型变量，声明的时候就默认分配好了

	new 接收一个参数，这个参数是类型，分配好内存后，返回一个指向该
		类型内存地址的指针，同时把分配的内存置为0，也就是类型的零值

	make也是用于内存分配，但它只用于chan，map以及切片的内存创建，
		且他返回的类型就是这三个类型本身，而不是他们的指针类型，因为
		这三个类型就是引用类型，所以没必要返回他们的指针

	==================================================================

	所以有new这个内置函数，可以给我们分配一块内存让我们使用，但是现实的编码中，
	它是不常用的。我们通常都是采用短语句声明以及结构体的字面量达到我们的目的

	make函数是无可替代的，我们在使用slice、map以及channel的时候，
	还是要使用make进行初始化，然后才可以对他们进行操作。
 */

func main() {
	ch:=make(chan int)
	//var i *int
	i:=new(int)

	*i=10
	fmt.Println(*i)

	go func() {
		ch<-232
	}()

	fmt.Println(<-ch)
}
